name: Deploy cluster

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build_job:
    runs-on: ubuntu-latest
    environment: production #Should be changed, lol
    defaults:
      run:
        working-directory: ./Terraform
    
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_USE_AZUREAD: true

    steps:
    - uses: actions/checkout@v3

    - name: Install Terraform
      run: bash "${{ github.workspace }}/.github/scripts/install_terraform.sh" 

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: |
        terraform init \
        -backend-config=resource_group_name="${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME_DEV }}" \
        -backend-config=storage_account_name="${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME_DEV }}" \
        -backend-config=container_name="${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME_DEV }}" \
        -backend-config=key="k8cluster.dev.tfstate"
        
    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -var-file="envs/dev/vars.dev.tfvars" -out=tfplan
      env:
        sshkey_secret_name: ${{ secrets.SECRET_NAME }}
        sshkey_keyvault_name: ${{ secrets.KEYVAULT_NAME }}
        sshkey_keyvault_resource_group_name: ${{ secrets.KEYVAULT_RESOURCE_GROUP_NAME }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan